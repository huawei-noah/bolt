cmake_minimum_required(VERSION 3.2)

file(GLOB BOLT_CONFIGURE_FILE $ENV{BOLT_ROOT}/common/cmakes/bolt.cmake ${BOLT_ROOT}/common/cmakes/bolt.cmake)
if (BOLT_CONFIGURE_FILE)
    include(${BOLT_CONFIGURE_FILE})
else (BOLT_CONFIGURE_FILE)
    message(FATAL_ERROR "
FATAL: can not find bolt.cmake in <BOLT_ROOT> directory,
       please set shell or cmake environment variable BOLT_ROOT.
    ")
endif (BOLT_CONFIGURE_FILE)

project(kernelsource)

set_c_cxx_flags()

execute_process(
    COMMAND bash buildKernelSourceLib.sh
    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
)

file(GLOB source_srcs ${CMAKE_CURRENT_SOURCE_DIR}/src/cl/*.cpp)
file(GLOB option_srcs ${CMAKE_CURRENT_SOURCE_DIR}/src/option/*.cpp)
set(kernel_source_list "${source_srcs};${option_srcs}")
message(STATUS "${kernel_source_list}")

add_library(${PROJECT_NAME} SHARED ${kernel_source_list})
add_library(${PROJECT_NAME}_static STATIC ${kernel_source_list})
set_target_properties(${PROJECT_NAME}_static PROPERTIES OUTPUT_NAME "${PROJECT_NAME}")
set_target_properties(${PROJECT_NAME} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
set_target_properties(${PROJECT_NAME}_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_static
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)
install(FILES ${CMAKE_BINARY_DIR}/libOpenCL.so
        DESTINATION lib)
